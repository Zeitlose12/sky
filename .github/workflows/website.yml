name: Website

on:
  push:
    paths: ["src/**", ".github/workflows/website.yml"]

env:
  CONTAINER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  conflicts:
    runs-on: ubuntu-latest
    steps:
      - name: Check for PR conflicts
        uses: eps1lon/actions-label-merge-conflict@releases/2.x
        with:
          dirtyLabel: "has conflicts"
          repoToken: "${{ secrets.GITHUB_TOKEN }}"

  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    permissions:
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  formatting-checks:
    name: Check linting (es-lint), formatting (prettier), and svelte checks (svelte-check)
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: PNPM Install
        uses: ./.github/actions/pnpm-install

      - name: Make dummy env for types
        run: |
          echo "ls -a ."
          ls -a .
          mv .env.example .env

      - name: Check linting, formatting, and svelte checks
        run: pnpm lint

  build:
    name: Svelte Build
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Clone NotEnoughUpdates-REPO
        uses: actions/checkout@v3
        with:
          repository: NotEnoughUpdates/NotEnoughUpdates-REPO
          path: NotEnoughUpdates-REPO/
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: PNPM Install
        uses: ./.github/actions/pnpm-install

      - name: Make dummy env for types
        run: |
          echo "ls -a ."
          ls -a .
          mv .env.example .env

      - name: Svelte Build
        run: pnpm run build

  package:
    name: Package into Container
    if: |
      (github.ref == 'refs/heads/prod' || github.ref == 'refs/heads/dev')
      && github.repository_owner == 'SkyCryptWebsite'
      && github.event_name != 'pull_request'
    needs: [conflicts, analyze, formatting-checks, build]
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Registry login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and Push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
